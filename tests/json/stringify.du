/**
 * stringify.du
 *
 * Testing the JSON.stringify() function
 *
 */

assert(JSON.stringify(true) == 'true');
assert(JSON.stringify(false) == 'false');
assert(JSON.stringify(nil) == 'null');
assert(JSON.stringify(10) == '10');
assert(JSON.stringify(10.5) == '10.5');
assert(JSON.stringify("test") == '"test"');
assert(JSON.stringify([]) == '[]');
assert(JSON.stringify({}) == '{}');

assert(JSON.stringify([true]) == '[true]');
assert(JSON.stringify([false]) == '[false]');
assert(JSON.stringify([nil]) == '[null]');
assert(JSON.stringify([10]) == '[10]');
assert(JSON.stringify([10.5]) == '[10.5]');
assert(JSON.stringify(["test"]) == '["test"]');
assert(JSON.stringify([[]]) == '[[]]');
assert(JSON.stringify([{}]) == '[{}]');

assert(JSON.stringify({"test": true}) == '{"test": true}');
assert(JSON.stringify({"test": false}) == '{"test": false}');
assert(JSON.stringify({"test": nil}) == '{"test": null}');
assert(JSON.stringify({"test": 10}) == '{"test": 10}');
assert(JSON.stringify({"test": 10.5}) == '{"test": 10.5}');
assert(JSON.stringify({"test": "test"}) == '{"test": "test"}');
assert(JSON.stringify({"test": []}) == '{"test": []}');
assert(JSON.stringify({"test": {}}) == '{"test": {}}');
assert(JSON.stringify({10: {}}) == '{10: {}}');
assert(JSON.stringify({true: false}) == '{"true": false}');
assert(JSON.stringify({nil: 10.5}) == '{"null": 10.5}');

assert(JSON.stringify({"test": {"test": [1, 2, 3, {"test": true}]}}) == '{"test": {"test": [1, 2, 3, {"test": true}]}}');

// 2 space indent
var twoSpace = '[\n' +
    '  1,\n' +
    '  2\n' +
    ']';

// 3 space indent
var threeSpace = '[\n' +
    '   1,\n' +
    '   2\n' +
    ']';

// 4 space indent
var fourSpace = '[\n' +
    '    1,\n' +
    '    2\n' +
    ']';

assert(JSON.stringify([1, 2], 2) == twoSpace);
assert(JSON.stringify([1, 2], 3) == threeSpace);
assert(JSON.stringify([1, 2], 4) == fourSpace);