/**
* break.du
*
* Testing break in a loop
*/

var x = [];

for (var i = 0; i < 10; ++i) {
    if (i > 5)
        break;

    x.push(i);
}


assert(x == [0, 1, 2, 3, 4, 5]);

var i = 0;
var y = [];

while (i < 10) {
    if (i > 5)
        break;

    y.push(i);
    ++i;
}

assert(y == [0, 1, 2, 3, 4, 5]);

var z = [];

for (var i = 0; i < 10; ++i) {
    for (var j = 0; j < 10; ++j) {
        if (j > 5)
            break;

        z.push(j);
    }
    if (i > 5)
        break;

    z.push(i);
}

assert(z == [0, 1, 2, 3, 4, 5, 0, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 2, 0, 1, 2, 3, 4, 5, 3, 0, 1, 2, 3, 4, 5, 4, 0, 1, 2, 3, 4, 5, 5, 0, 1, 2, 3, 4, 5]);

var i = 0;
var z = [];

while (i < 5) {
    var j = 0;

    while (j < 5) {
        var m = 0;

        while (m < 5) {
            if (m > 3)
                break;

            z.push(m);
            ++m;
        }
        if (j > 3)
            break;

        z.push(j);
        ++j;
    }
    if (i > 3)
        break;

    z.push(i);
    ++i;
}

assert(z == [0, 1, 2, 3, 0, 0, 1, 2, 3, 1, 0, 1, 2, 3, 2, 0, 1, 2, 3, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 0, 0, 1, 2, 3, 1, 0, 1, 2, 3, 2, 0, 1, 2, 3, 3, 0, 1, 2, 3, 1, 0, 1, 2, 3, 0, 0, 1, 2, 3, 1, 0, 1, 2, 3, 2, 0, 1, 2, 3, 3, 0, 1, 2, 3, 2, 0, 1, 2, 3, 0, 0, 1, 2, 3, 1, 0, 1, 2, 3, 2, 0, 1, 2, 3, 3, 0, 1, 2, 3, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 1, 0, 1, 2, 3, 2, 0, 1, 2, 3, 3, 0, 1, 2, 3]);